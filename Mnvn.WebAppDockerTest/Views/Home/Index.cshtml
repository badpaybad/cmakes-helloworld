@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model string
@{

}
<h1>Hello world</h1>
<h3>

    <input id="fileImg" type="file" />
    <button onclick="savefile('fileImg')">Convert to mp4</button>
    <hr />
    In case ajax post file not work, try use api: <a href="/swagger">swagger api docs</a>
    <hr>
    @Html.Raw(Model)

</h3>

@section Scripts{
    <script>

        var savefile = function (imgNewFileDomId, onSuccess, onError) {

            var files = document.getElementById(imgNewFileDomId).files;
            var formData = new FormData();
            for (var i = 0; i != files.length; i++) {
                formData.append("file", files[i]);
            }
            var deferred = $.Deferred();
            var urlrequest = "http://localhost:5000/api/Ffmpeg/Convert2mp4";
               jQuery.ajax({
                //dataType: 'json', 
                dataType: 'multipart/form-data', 
                contentType:"multipart/form-data",
                enctype: 'multipart/form-data',
                headers: {
                    //'Authorization': 'Bearer ' + tokenSession
                    //'X-CSRF-TOKEN': 'xxxxxxxxxxxxxxxxxxxx',
                    //"access-control-allow-origin":"*"
                    "Content-Type": "multipart/form-data"
                },
                crossDomain: true,
                type: "POST",
                url: urlrequest,
                data: formData,
                success: function (result) {

                    console.log(result);

                    console.log(JSON.parse(result.parseResult));

                    if (onSuccess) onSuccess(result);

                    deferred.resolve(result);
                },
                error: function (result) {

                    alert(JSON.stringify(result));

                    if (onError) onError(result);

                    deferred.reject(result);

                },

                cache: false,
                contentType: false,
                processData: false
            });

            return deferred.promise();
        }

    </script>

}